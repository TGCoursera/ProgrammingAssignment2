test <- matrix (
c(2,4,3,1,5,7)),
test <- matrix (c(2,4,3,1,5,7), nrow = 2, ncol = 3, byrow = TRUE)
test
a <- makeCacheMatrix(test)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getinverse()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
a <- makeCacheMatrix(test)
cacheSolve(a)
test <- test [1:2,]
test <- test[,1:2]
test
a <- makeCacheMatrix(test)
cacheSolve(a)
cacheSolve(a)
